image: registry-nexus-pic.gendarmerie.fr/bitnami/git

variables:
    SENSIO_ACCESS_TOKEN: "$SENSIO_ACCESS_TOKEN"
    PEL_ACCESS_TOKEN: "$PEL_ACCESS_TOKEN"
    REGISTRY_PASSWORD: "$REGISTRY_PASSWORD"
    REGISTRY_USER: "$REGISTRY_USER"
    ATOS_REGISTRY_PASSWORD: "$ATOS_REGISTRY_PASSWORD"
    PROXY: "$PROXY"
    PHP_SSH_KEY: "$PHP_SSH_KEY"
    ANSIBLE_VAULT_PASSWORD: "$ANSIBLE_VAULT_PASSWORD"

stages:
    - code-clone
    - build-qualif

.test:
    image: registry-nexus-pic.gendarmerie.fr/docker:20.10

    stage: code-clone
    tags:
        - proxy-internet
    script:
        - echo ${REGISTRY_PASSWORD} | docker login registry-nexus-pic.gendarmerie.fr --username ${REGISTRY_USER} --password-stdin
        - echo "FROM registry-nexus-pic.gendarmerie.fr/php:8.1-fpm-alpine" > Dockerfile
        - echo "RUN printenv" >> Dockerfile
        - echo "RUN curl --noproxy \"*\" -k https://nexus-pic.gendarmerie.fr/repository/binaries-pic/composer/2.2.21/composer.phar > /usr/local/bin/composer && chmod +x /usr/local/bin/composer" >> Dockerfile
        - echo "RUN composer create-project symfony/skeleton test_project" >> Dockerfile
        - echo "RUN curl -k -v 'https://nexus-pic.gendarmerie.fr'" >> Dockerfile
        - docker build --network=host --build-arg HTTP_PROXY="$HTTP_PROXY" --build-arg

build-citoyen:
    image: registry-nexus-pic.gendarmerie.fr/docker:20.10
    stage: build-qualif
    tags:
        - proxy-internet
    script:
        - mkdir -p ~/.kube/ && echo $KUBECONFIGBASE64 | base64 -d > ~/.kube/config.yaml
        - export KUBECONFIG=~/.kube/config.yaml
        - apk add curl wget git bash yq openssl tar
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - mv ./kubectl /usr/local/bin
        - curl -k https://nexus-pic.gendarmerie.fr/repository/binaries-pic/helm/helm-v3.7.2-linux-amd64.tar.gz > helm-v3.7.2-linux-amd64.tar.gz
        - tar xzvf helm-v3.7.2-linux-amd64.tar.gz
        - ls -l ./linux-amd64/
        - mv ./linux-amd64/helm /usr/local/bin
        - chmod +x /usr/local/bin/helm

        - kubectl config use-context pel-ppr-qual

        - cd portail_citoyen
        - export DOCKER_BUILDKIT=0
        - export COMPOSE_DOCKER_CLI_BUILD=0
        - export HTTPS_PROXY=${PROXY}:80 
        - export HTTP_PROXY=${PROXY}:80 
        - export https_proxy=${PROXY}:80 
        - export http_proxy=${PROXY}:80
        
        ## Push image to Nexux registry
        - echo "${REGISTRY_PASSWORD}" | docker login registry-omnibus-pic.gendarmerie.fr --username ${REGISTRY_USER} --password-stdin
        - docker build . --network=host --build-arg HTTP_PROXY="$HTTP_PROXY" --build-arg HTTPS_PROXY="$HTTPS_PROXY" --build-arg PHP_IMAGE=registry-nexus-pic.gendarmerie.fr/bap/pel/base-php:1.0.0 --tag "registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-php:latest" -f k8s/php/Dockerfile
        - docker build . --network=host --build-arg HTTP_PROXY="$HTTP_PROXY" --build-arg HTTPS_PROXY="$HTTPS_PROXY" --build-arg PHP_IMAGE=registry-nexus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-php:latest --build-arg NGINX_IMAGE=registry-nexus-pic.gendarmerie.fr/nginx:latest --tag "registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-nginx:latest" -f k8s/nginx/Dockerfile
        - docker push registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-php:latest
        - docker push registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-nginx:latest

        ## Push image to ATOS registry
        - echo "${ATOS_REGISTRY_PASSWORD}" | docker login https://registry.pel.pp.fsi.interieur.gouv.fr --username deployer --password-stdin
        - docker tag registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-php:latest registry.pel.pp.fsi.interieur.gouv.fr/library/plainte-en-ligne-php:0.1.0
        - docker tag registry-omnibus-pic.gendarmerie.fr/bap/pel/plainte-en-ligne-nginx:latest registry.pel.pp.fsi.interieur.gouv.fr/library/plainte-en-ligne-nginx:0.1.0
        - docker push registry.pel.pp.fsi.interieur.gouv.fr/library/plainte-en-ligne-php:0.1.0
        - docker push registry.pel.pp.fsi.interieur.gouv.fr/library/plainte-en-ligne-nginx:0.1.0

        - docker pull registry.pel.pp.fsi.interieur.gouv.fr/library/plainte-en-ligne-php:0.1.0

        ## Deploy newly pushed image
        - helm upgrade --install -n pel-qual pel-qual k8s/pel-chart-0.1.0/pel-chart/. --set nginx.image.tag=0.1.0 --set php.image.tag=0.1.0

.clone-code:
    stage: code-clone
    tags:
        - proxy-internet
    only:
        - main
    when: manual
    allow_failure: true
    script:
        - git clone https://pel:${SENSIO_ACCESS_TOKEN}@git.smile.fr/ministere-de-l-interieur/plaintes-en-ligne-pel.git
        - cd plaintes-en-ligne-pel && git pull --all && git fetch -u origin develop
        - git remote rm origin && git remote add origin https://pel:${PEL_ACCESS_TOKEN}@omnibus-pic.gendarmerie.fr/BAP/pel/plainte-en-ligne.git
        - git pull && git fetch && git checkout
        - git branch --set-upstream-to=origin/develop develop
        - git pull && git fetch && git checkout
        - git push -u origin develop

.install-ansible:
    stage: build-qualif
    tags:
        - proxy-internet
    only:
        - main
    script:
        - mkdir ~/.ssh && chmod 600 ~/.ssh && cp portail_agent/ansible/artefacts/known_hosts_qualif ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts && echo "$PHP_SSH_KEY" > ~/.ssh/id_rsa_ansible && chmod 600 ~/.ssh/id_rsa_ansible && echo "$ANSIBLE_VAULT_PASSWORD" > ~/.vault_token && chmod 600 ~/.vault_token
        - apt-get update && apt-get install -y net-tools software-properties-common gnupg2 python3.9-distutils && apt-get update
        - echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list && curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.9 get-pip.py --user
        - ~/.local/bin/pip install --user ansible
        - ~/.local/bin/ansible-galaxy install --ignore-errors -p ~/.ansible/roles -r $(pwd)/portail_agent/ansible/requirements-ipms.yaml -vvv
        - ~/.local/bin/ansible-playbook -vvv --become-method=su --become-user=ansible $(pwd)/portail_agent/ansible/deploy/deploy.yaml -i $(pwd)/portail_agent/ansible/qualif_ipms.yaml --vault-password-file=~/.vault_token --private-key=~/.ssh/id_rsa_ansible --extra-vars "symfony_root_dir=/srv/data/pel" --extra-vars "ansistrano_git_repo=https://oauth2:${TOKEN_OMNIBUS}@omnibus-pic.gendarmerie.fr/BAP/pel/plainte-en-ligne.git"
