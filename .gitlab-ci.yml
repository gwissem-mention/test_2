variables:
    HARBOR_PROJECT: "ministere-de-linterieur-plaintes-en-ligne-pel-2"
    PHP_AGENT_ARTIFACT_NAME: "php-agent-debug:$CI_COMMIT_REF_SLUG"
    PHP_CITOYEN_ARTIFACT_NAME: "php-citoyen-debug:$CI_COMMIT_REF_SLUG"
    PHP_AGENT_CHANGE: 0
    PHP_CITOYEN_CHANGE: 0

workflow:
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_BRANCH == "develop"
        - if: $CI_COMMIT_BRANCH == "main"

stages:
    - check
    - build
    - vendor
    - security
    - quality
    - test

#######################################
##         Basic Inheritance         ##
#######################################

.basic-override: &basic-override
    dependencies: []
    tags:
        - docker
        - rancher

.agent-step: &agent-step
    image: "registry.smile.fr/${HARBOR_PROJECT}/${PHP_AGENT_ARTIFACT_NAME}"
    before_script:
        - cd ./portail_agent/
    <<: *basic-override

.citoyen-step: &citoyen-step
    image: "registry.smile.fr/${HARBOR_PROJECT}/${PHP_CITOYEN_ARTIFACT_NAME}"
    before_script:
        - cd ./portail_citoyen/
    <<: *basic-override

.cache-tools-agent: &cache-tools-agent
    cache:
        key: "tools-agent-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_agent/tools"

.cache-tools-citoyen: &cache-tools-citoyen
    cache:
        key: "tools-citoyen-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_citoyen/tools"

.cache-vendor-agent: &cache-vendor-agent
    cache:
        key: "vendor-agent-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_agent/vendor"

.cache-vendor-citoyen: &cache-vendor-citoyen
    cache:
        key: "vendor-citoyen-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_citoyen/vendor"

.cache-front-agent: &cache-front-agent
    cache:
        key: "front-agent-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_agent/public"
            - "portail_agent/node_modules"

.cache-front-citoyen: &cache-front-citoyen
    cache:
        key: "front-citoyen-${CI_COMMIT_REF_SLUG}"
        paths:
            - "portail_citoyen/public"
            - "portail_citoyen/node_modules"

.cache-complete-agent: &cache-complete-agent
    cache:
        - key: "front-agent-${CI_COMMIT_REF_SLUG}"
          paths:
            - "portail_agent/public"
            - "portail_agent/node_modules"
        - key: "vendor-agent-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_agent/vendor"

.cache-complete-citoyen: &cache-complete-citoyen
    cache:
        - key: "front-citoyen-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_citoyen/public"
              - "portail_citoyen/node_modules"
        - key: "vendor-citoyen-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_citoyen/vendor"

#######################################
##               Check               ##
#######################################

check-php-agent-change:
    stage: check
    image: docker
    script:
        - echo 'PHP_AGENT_CHANGE=1' >> build.env
    <<: *basic-override
    artifacts:
        reports:
            dotenv: build.env
    only:
        changes:
            - docker-compose.yml
            - ./portail_agent/Dockerfile
            - ./portail_agent/docker/**/*

check-php-citoyen-change:
    stage: check
    image: docker
    script:
        - echo 'PHP_CITOYEN_CHANGE=1' >> build.env
    only:
        changes:
            - docker-compose.yml
            - ./portail_citoyen/Dockerfile
            - ./portail_citoyen/docker/**/*
    <<: *basic-override
    artifacts:
        reports:
            dotenv: build.env

check-php-images:
    stage: check
    image: docker
    variables:
        PHP_AGENT_CHANGE: 0
        PHP_CITOYEN_CHANGE: 0
    script:
        - echo "${HARBOR_PASSWORD}" | docker login registry.smile.fr -u ${HARBOR_USER} --password-stdin
        - docker manifest inspect registry.smile.fr/${HARBOR_PROJECT}/${PHP_AGENT_ARTIFACT_NAME} && echo 'PHP_AGENT_EXIST=1' >> build.env || echo 'PHP_AGENT_EXIST=0' >> build.env && true
        - docker manifest inspect registry.smile.fr/${HARBOR_PROJECT}/${PHP_CITOYEN_ARTIFACT_NAME} && echo 'PHP_CITOYEN_EXIST=1' >> build.env || echo 'PHP_CITOYEN_EXIST=0' >> build.env && true
    <<: *basic-override
    artifacts:
        reports:
            dotenv: build.env
    dependencies:
        - check-php-agent-change
        - check-php-citoyen-change

#######################################
##               Build               ##
#######################################

agent-build-php:
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    stage: build
    variables:
        PHP_AGENT_CHANGE: 0
        PHP_AGENT_EXIST: 0
    script:
        - echo "PHP_AGENT_CHANGE=${PHP_AGENT_CHANGE}"
        - echo "PHP_AGENT_EXIST=${PHP_AGENT_EXIST}"
        - mkdir -p /kaniko/.docker
        - |
            cat > /kaniko/.docker/config.json <<EOM
            {
                "auths": {
                    "registry.smile.fr": {
                        "auth": "$(printf "%s:%s" "${HARBOR_USER}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')"
                    }
                }
            }
            EOM
        - |
            if [ ${PHP_AGENT_CHANGE} -eq 1 ] || [ ${PHP_AGENT_EXIST} -eq 0 ];
            then
                echo "Build of PHP Agent needed"

                /kaniko/executor --context "${CI_PROJECT_DIR}/portail_agent/" --build-arg "BUILD_PATH='./portail_agent/'" --target "symfony_php_debug" --destination "registry.smile.fr/${HARBOR_PROJECT}/${PHP_AGENT_ARTIFACT_NAME}"
            else
                echo "Build of PHP Agent not needed"
            fi
    <<: *basic-override
    dependencies:
        - check-php-images

citoyen-build-php:
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    stage: build
    variables:
        PHP_CITOYEN_CHANGE: 0
        PHP_CITOYEN_EXIST: 0
    script:
        - echo "PHP_CITOYEN_CHANGE=${PHP_CITOYEN_CHANGE}"
        - echo "PHP_CITOYEN_EXIST=${PHP_CITOYEN_EXIST}"
        - mkdir -p /kaniko/.docker
        - |
            cat > /kaniko/.docker/config.json <<EOM
            {
                "auths": {
                    "registry.smile.fr": {
                        "auth": "$(printf "%s:%s" "${HARBOR_USER}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')"
                    }
                }
            }
            EOM
        - >-
            if [ ${PHP_CITOYEN_CHANGE} -eq 1 ] || [ ${PHP_CITOYEN_EXIST} -eq 0 ];
            then
                echo "Build of PHP Citoyen needed"
                /kaniko/executor --context "${CI_PROJECT_DIR}/portail_citoyen/" --build-arg "BUILD_PATH='./portail_citoyen/'" --target "symfony_php_debug" --destination "registry.smile.fr/${HARBOR_PROJECT}/${PHP_CITOYEN_ARTIFACT_NAME}"
            else
                echo "Build of PHP Citoyen not needed"
            fi
    <<: *basic-override
    dependencies:
        - check-php-images

.build-front: &build-front
    stage: build
    image: node:16
    script:
        - make install
        - make build-ci

agent-build-front:
    <<: *cache-front-agent
    <<: *build-front
    <<: *basic-override
    before_script:
        - cd ./portail_agent/

citoyen-build-front:
    <<: *cache-front-citoyen
    <<: *build-front
    <<: *basic-override
    before_script:
        - cd ./portail_citoyen/
    variables:
        KUBERNETES_MEMORY_REQUEST: 1Gi
        KUBERNETES_MEMORY_LIMIT: 1Gi

#######################################
##              Vendor               ##
#######################################

.build-tools: &build-tools
    stage: vendor
    script:
        - make tools-install

agent-build-tools:
    <<: *agent-step
    <<: *cache-tools-agent
    <<: *build-tools

citoyen-build-tools:
    <<: *citoyen-step
    <<: *cache-tools-citoyen
    <<: *build-tools

.build-vendor: &build-vendor
    stage: vendor
    script:
        - make vendor

agent-build-vendor:
    <<: *agent-step
    <<: *cache-vendor-agent
    <<: *build-vendor

citoyen-build-vendor:
    <<: *citoyen-step
    <<: *cache-vendor-citoyen
    <<: *build-vendor

#######################################
##            Quality Tools           #
#######################################

## Security ##
.symfony-security: &symfony-security
    stage: security
    script:
        - make security

agent-symfony-security:
    <<: *agent-step
    <<: *symfony-security

citoyen-symfony-security:
    <<: *citoyen-step
    <<: *symfony-security

## Php Cs Fixer ##
.cs: &cs
    stage: quality
    script:
        - make cs

agent-php-cs:
    <<: *cache-tools-agent
    <<: *agent-step
    <<: *cs

citoyen-php-cs:
    <<: *cache-tools-citoyen
    <<: *citoyen-step
    <<: *cs

## Php Magic Number Detector ##
.mnd: &mnd
    stage: quality
    script:
        - make mnd

agent-php-mnd:
    <<: *cache-tools-agent
    <<: *agent-step
    <<: *mnd

citoyen-php-mnd:
    <<: *cache-tools-citoyen
    <<: *citoyen-step
    <<: *mnd

## Phpstan ##
.phpstan: &phpstan
    stage: quality
    script:
        - make phpstan

agent-php-phpstan:
    <<: *agent-step
    <<: *phpstan
    cache:
        - key: "tools-agent-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_agent/tools"
        - key: "vendor-agent-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_agent/vendor"

citoyen-php-phpstan:
    <<: *citoyen-step
    <<: *phpstan
    cache:
        - key: "tools-citoyen-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_citoyen/tools"
        - key: "vendor-citoyen-${CI_COMMIT_REF_SLUG}"
          paths:
              - "portail_citoyen/vendor"

## Php Assumption ##
.assumption: &assumption
    stage: quality
    script:
        - make assumption

agent-php-assumption:
    <<: *cache-tools-agent
    <<: *agent-step
    <<: *assumption

citoyen-php-assumption:
    <<: *cache-tools-citoyen
    <<: *citoyen-step
    <<: *assumption

## Php Copy/Past Detector ##
.cpd: &cpd
    stage: quality
    script:
        - make cpd

agent-php-cpd:
    <<: *cache-tools-agent
    <<: *agent-step
    <<: *cpd

citoyen-php-cpd:
    <<: *cache-tools-citoyen
    <<: *citoyen-step
    <<: *cpd

#######################################
##          Tests Frameworks          #
#######################################

## PhpUnit ##
.unit: &unit
    stage: test
    script:
        - make unit

agent-unit:
    <<: *cache-vendor-agent
    <<: *agent-step
    <<: *unit

citoyen-unit:
    <<: *cache-vendor-citoyen
    <<: *citoyen-step
    <<: *unit

## Behat ##
.func: &func
    stage: test
    script:
        - make behat

agent-func:
    <<: *cache-complete-agent
    <<: *agent-step
    <<: *func

citoyen-func:
    <<: *cache-complete-citoyen
    <<: *citoyen-step
    <<: *func

citoyen-e2e:
    <<: *cache-complete-citoyen
    <<: *citoyen-step
    variables:
        POSTGRES_DB: "app"
        POSTGRES_PASSWORD: "ChangeMe"
        POSTGRES_USER: "symfony"
        SERVER_NAME: "citoyen.pel.localhost"
        PHP_HOST: "php-citoyen"
        PHP_PORT: "9000"
        SE_EVENT_BUS_HOST: "selenium-hub"
        SE_EVENT_BUS_PUBLISH_PORT: "4442"
        SE_EVENT_BUS_SUBSCRIBE_PORT: "4443"
        HUB_PORT_4444_TCP_ADDR: selenium-hub
        HUB_PORT_4444_TCP_PORT: 4444
    script:
        - make e2e
    services:
        - name: nginx
          alias: nginx-citoyen
        - name: postgres:13-alpine
          alias: database-citoyen
        - name: selenium/hub
          alias: selenium-hub
        - name: selenium/node-chrome
          alias: chrome

        ## Infection ##
.infection: &infection
    stage: test
    script:
        - make infection

agent-infection:
    <<: *cache-tools-agent
    <<: *agent-step
    <<: *infection
    allow_failure: true
    needs:
        - agent-unit

citoyen-infection:
    <<: *cache-tools-citoyen
    <<: *citoyen-step
    <<: *infection
    allow_failure: true
    needs:
        - citoyen-unit
