variables:
    HARBOR_PROJECT: "ministere-de-linterieur-plaintes-en-ligne-pel-2"
    PHP_AGENT_ARTIFACT_NAME: "php_agent_debug:$CI_COMMIT_REF_SLUG"
    PHP_CITOYEN_ARTIFACT_NAME: "php_citoyen_debug:$CI_COMMIT_REF_SLUG"

stages:
    - build
    - security
    - quality
    - test

#######################################
##         Basic Inheritance         ##
#######################################

.basic-override: &basic-override
    dependencies: []
    tags:
        - docker

.agent-step: &agent-step
    image: "registry.smile.fr/${HARBOR_PROJECT}/${PHP_AGENT_ARTIFACT_NAME}"
    before_script:
        - cd ./portail_agent/
        - make vendor
    <<: *basic-override

.citoyen-step: &citoyen-step
    image: "registry.smile.fr/${HARBOR_PROJECT}/${PHP_CITOYEN_ARTIFACT_NAME}"
    before_script:
        - cd ./portail_citoyen/
        - make vendor
    <<: *basic-override

#######################################
##               Build               ##
#######################################

agent-build-php:
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    stage: build
    script:
        - mkdir -p /kaniko/.docker
        - |
            cat > /kaniko/.docker/config.json <<EOM
            {
                "auths": {
                    "registry.smile.fr": {
                        "auth": "$(printf "%s:%s" "${HARBOR_USER}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')"
                    }
                }
            }
            EOM
        - >-
            /kaniko/executor
            --context "${CI_PROJECT_DIR}/portail_agent/"
            --build-arg "BUILD_PATH='./portail_agent/'"
            --target "symfony_php_debug"
            --destination "registry.smile.fr/${HARBOR_PROJECT}/${PHP_AGENT_ARTIFACT_NAME}"
    only:
        changes:
            - "portail_agent/Dockerfile"
            - "portail_agent/docker/**/*"
            - "docker-compose.*.yaml"
            - "docker-compose.yaml"
    <<: *basic-override

citoyen-build-php:
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    stage: build
    script:
        - mkdir -p /kaniko/.docker
        - |
            cat > /kaniko/.docker/config.json <<EOM
            {
                "auths": {
                    "registry.smile.fr": {
                        "auth": "$(printf "%s:%s" "${HARBOR_USER}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')"
                    }
                }
            }
            EOM
        - >-
            /kaniko/executor
            --context "${CI_PROJECT_DIR}/portail_citoyen/"
            --build-arg "BUILD_PATH='./portail_citoyen/'"
            --target "symfony_php_debug"
            --destination "registry.smile.fr/${HARBOR_PROJECT}/${PHP_CITOYEN_ARTIFACT_NAME}"
    only:
        changes:
            - "portail_citoyen/Dockerfile"
            - "portail_citoyen/docker/**/*"
            - "docker-compose.*.yaml"
            - "docker-compose.yaml"
    <<: *basic-override

#######################################
##            Quality Tools           #
#######################################

## Security ##
.symfony-security: &symfony-security
    stage: security
    script:
        - make security

agent-symfony-security:
    <<: *agent-step
    <<: *symfony-security

citoyen-symfony-security:
    <<: *citoyen-step
    <<: *symfony-security

## Php Cs Fixer ##
.cs: &cs
    stage: quality
    script:
        - make tools-install
        - make cs

agent-php-cs:
    <<: *agent-step
    <<: *cs

citoyen-php-cs:
    <<: *citoyen-step
    <<: *cs

## Php Magic Number Detector ##
.mnd: &mnd
    stage: quality
    script:
        - make tools-install
        - make mnd

agent-php-mnd:
    <<: *agent-step
    <<: *mnd

citoyen-php-mnd:
    <<: *citoyen-step
    <<: *mnd

## Phpstan ##
.phpstan: &phpstan
    stage: quality
    script:
        - make tools-install
        - make phpstan

agent-php-phpstan:
    <<: *agent-step
    <<: *phpstan

citoyen-php-phpstan:
    <<: *citoyen-step
    <<: *phpstan

## Php Assumption ##
.assumption: &assumption
    stage: quality
    script:
        - make tools-install
        - make assumption

agent-php-assumption:
    <<: *agent-step
    <<: *assumption

citoyen-php-assumption:
    <<: *citoyen-step
    <<: *assumption

## Php Copy/Past Detector ##
.cpd: &cpd
    stage: quality
    script:
        - make tools-install
        - make cpd

agent-php-cpd:
    <<: *agent-step
    <<: *cpd

citoyen-php-cpd:
    <<: *citoyen-step
    <<: *cpd


#######################################
##          Tests Frameworks          #
#######################################

## PhpUnit ##
.unit: &unit
    stage: test
    script:
        - make unit

agent-unit:
    <<: *agent-step
    <<: *unit

citoyen-unit:
    <<: *citoyen-step
    <<: *unit

## Infection ##
.infection: &infection
    stage: test
    script:
        - make tools-install
        - make infection

agent-infection:
    <<: *agent-step
    <<: *infection
    allow_failure: true
    needs:
        - agent-unit

citoyen-infection:
    <<: *citoyen-step
    <<: *infection
    allow_failure: true
    needs:
        - citoyen-unit
