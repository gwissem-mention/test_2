version: '3.4'

services:
  php_citoyen:
    build:
      context: ./portail_citoyen
      target: symfony_php
      args:
        PHP_VERSION: 8.1
        SYMFONY_VERSION: 6.1.*
        SKELETON: symfony/skeleton
        STABILITY: stable
        BUILD_PATH: ./portail_citoyen/
    restart: unless-stopped
    volumes:
      - php_8:/var/run/php
      - citoyen_public:/srv/citoyen/public
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-ChangeMe}@database_citoyen:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-13}

  php_agent:
    build:
      context: ./portail_agent
      target: symfony_php
      args:
        PHP_VERSION: 7.4
        SYMFONY_VERSION: 5.4.*
        SKELETON: symfony/skeleton
        STABILITY: stable
        BUILD_PATH: ./portail_citoyen/
    restart: unless-stopped
    volumes:
      - php_7:/var/run/php
      - agent_public:/srv/agent/public
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-ChangeMe}@database_agent:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-13}

  caddy:
    build:
      context: ./docker/caddy
      target: symfony_caddy
    depends_on:
      - php_citoyen
      - php_agent
    restart: unless-stopped
    volumes:
      - php_8:/var/run/php/8
      - php_7:/var/run/php/7
      - citoyen_public:/srv/citoyen/public
      - agent_public:/srv/agent/public
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  ###> doctrine/doctrine-bundle ###
  database_citoyen:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  database_agent:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  php_8:
  php_7:
  citoyen_public:
  agent_public:
  caddy_data:
  caddy_config:
  ###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
