- name: creation du repertoire .config
  file:
      path: ~/.config/composer
      state: directory
      mode: 0755
  when: in_ipms

- name: Copy Composer repository global config
  when: in_ipms
  copy:
      dest: ~/.config/composer/config.json
      content: |
          {
              "config": {},
              "repositories": {
                  "packagist": false,
                  "nexus": {
                      "type": "composer",
                      "url": "https://nexus-pic.gendarmerie.fr/repository/composer-packagist/packages.json"
                  }
              }
          }

- name: Copy NPM repository global config
  when: in_ipms
  copy:
      dest: ~/.npmrc
      content: |
          registry=https://nexus-pic.gendarmerie.fr/repository/npm/
          strict-ssl=false

- name: Copy Yarn repository global config
  when: in_ipms
  copy:
      dest: ~/.yarnrc
      content: |
          registry "https://nexus-pic.gendarmerie.fr/repository/npm/"
          strict-ssl false


- name: Update Registry URLs in Lock file
  composer:
      command: update
      arguments: --lock --no-install
      no_plugins: true
      no_scripts: true
      working_dir: "{{ release_portal_path }}"
  environment:
      COMPOSER_ALLOW_SUPERUSER: 1
  when: in_ipms

- name: Install vendors for prod env
  make:
      chdir: '{{ release_portal_path }}'
      target: vendor-prod
  environment:
      COMPOSER_ALLOW_SUPERUSER: 1

- name: Clear the cache
  make:
      chdir: '{{ release_portal_path }}'
      target: cache-clear
      params:
          APP_ENV: "{{ ansible_env.APP_ENV }}"

- name: Warm up the cache
  make:
      chdir: '{{ release_portal_path }}'
      target: cache-warmup
      params:
          APP_ENV: "{{ ansible_env.APP_ENV }}"

- name: Create DB if not exists
  make:
      chdir: '{{ release_portal_path }}'
      target: db-create
  register: create_db_output
  changed_when: create_db_output.stdout is not search('already exists. Skipped')
  when: not in_ipms

- name: Create extensions
  become: true
  become_user: postgres
  command: 'psql -d {{ app_db }} -c "create extension if not exists unaccent"'
  when: not in_ipms

- name: Recreate referential database
  make:
      chdir: '{{ release_portal_path }}'
      target: referential-create
  when: force_referential_update and not in_ipms

- name: Load fresh referentials
  make:
      chdir: '{{ release_portal_path }}'
      target: referential-load
  when: force_referential_update and (in_php_main_machine or not in_ipms)

- name: Run migrations
  make:
      chdir: '{{ release_portal_path }}'
      target: db-migrate
  register: run_migrations_output
  changed_when: run_migrations_output.stdout is not search('No migrations to execute')
  when: in_php_main_machine or not in_ipms

- name: Load fixtures
  make:
      chdir: '{{ release_portal_path }}'
      target: db-load
  when: force_reload_db

- name: Install bundle assets
  command: '{{ release_console_path }} assets:install {{ release_public_path }} --symlink --no-debug'

- name: Install Node dependencies
  make:
      chdir: '{{ release_portal_path }}'
      target: install
  when: not in_ipms

- name: Install Node dependencies for IPMS
  make:
      chdir: '{{ release_portal_path }}'
      target: install-ipms
  when: in_ipms

- name: Install Webpack Encore assets
  make:
      chdir: '{{ release_portal_path }}'
      target: build

# Needs to be done in preprod and prod only
- name: Set www-data as the owner of project directory
  become: true
  file:
      path: "{{ release_portal_path }}"
      owner: www-data
      group: www-data
      mode: 0775
      recurse: true
  when: in_ipms
#
# Needs sudoer privileges to run in qualif
- name: Setup directory permissions for var/
  become: true
  file:
      path: "{{ release_portal_path }}/var"
      state: directory
      mode: 0777
      recurse: true
  when: in_ipms
